
//Hello frands. Relax its super easy. Provided you have installed all the libraries you should be good to go
// What library?? go Readme.md file open it with notepad.
//Wiring is pretty simple Oled and MPU6050 connects to I2C pins and are powered by the board itself using 3v pin
//Servo pins are 18 andd 19
//If you need help come to discord- https://discord.gg/fMXvGty
// youtube- https://www.youtube.com/channel/UCe5G9yS2XvetGfjfT-O89vw?view_as=subscriber


//Just some libararies.....
#include <Adafruit_MPU6050.h>
#include <Adafruit_Sensor.h>
#include <Wire.h>
#include <ESP32Servo.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

// Stuff  for making oled screen work
#define OLED_RESET 4
Adafruit_SSD1306 display(128, 64, &Wire, OLED_RESET);


// Dont loose hope the number below are just the image displayed on the screen they are generated automatically. chill .Daro mat frands 
//if you want to change imgae on screen go here https://diyusthad.com/2019/02/display-images-in-oled-display.html
const unsigned char myBitmap [] PROGMEM = {
  // 'ROCKET FLIGHT Computer (2), 128x64px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x87, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x1f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xbf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xbf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x18, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x7c, 0x7e, 0x3e, 0x64, 0x79, 0xf0, 0x01, 0xf2, 0x08, 0xf8, 0x84, 0xf8, 0x00, 0x00, 
  0x00, 0x00, 0x66, 0x42, 0x60, 0x68, 0x40, 0x40, 0x01, 0x82, 0x09, 0x80, 0x84, 0x20, 0x00, 0x00, 
  0x00, 0x00, 0x66, 0xc3, 0x60, 0x78, 0x40, 0x40, 0x01, 0x82, 0x09, 0x00, 0xfc, 0x20, 0x00, 0x00, 
  0x00, 0x00, 0x7c, 0xc3, 0x60, 0x78, 0x78, 0x40, 0x01, 0xe2, 0x09, 0x18, 0xfc, 0x20, 0x00, 0x00, 
  0x00, 0x00, 0x6c, 0x42, 0x60, 0x68, 0x40, 0x40, 0x01, 0x82, 0x09, 0x88, 0x84, 0x20, 0x00, 0x00, 
  0x00, 0x00, 0x64, 0x66, 0x30, 0x6c, 0x40, 0x40, 0x01, 0x82, 0x09, 0x88, 0x84, 0x20, 0x00, 0x00, 
  0x00, 0x00, 0x66, 0x3c, 0x1e, 0x66, 0x78, 0x40, 0x01, 0x83, 0xc8, 0xf8, 0x84, 0x20, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x8f, 0x8c, 0x33, 0xe6, 0x37, 0xef, 0x9f, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0xce, 0x73, 0x36, 0x31, 0x8c, 0x19, 0x80, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0xce, 0x73, 0x36, 0x31, 0x8c, 0x19, 0x80, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0xca, 0x53, 0xe6, 0x31, 0x8f, 0x9f, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x18, 0x10, 0xcb, 0xd3, 0x86, 0x21, 0x8c, 0x1b, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x18, 0x19, 0x89, 0x93, 0x02, 0x61, 0x8c, 0x19, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x8f, 0x09, 0x93, 0x03, 0xc1, 0x8f, 0x99, 0x80, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xfe, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x3f, 0xff, 0xe0, 0x00, 0x00, 0x3f, 0xff, 0xe0, 0x00, 0x03, 0xff, 0xfc, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xff, 0xc0, 0x00, 0x00, 0x1f, 0xff, 0xc0, 0x00, 0x03, 0xff, 0xf8, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0xff, 0x80, 0x00, 0x00, 0x0f, 0xff, 0x80, 0x00, 0x01, 0xff, 0xf0, 0x00, 0x00, 
  0x00, 0x00, 0x07, 0xff, 0x00, 0x00, 0x00, 0x07, 0xff, 0x00, 0x00, 0x00, 0xff, 0xe0, 0x00, 0x00, 
  0x00, 0x80, 0x03, 0xfe, 0x00, 0x04, 0x00, 0x03, 0xfe, 0x00, 0x30, 0x00, 0x7f, 0xc0, 0x01, 0x00, 
  0x01, 0x80, 0x03, 0xfe, 0x00, 0x0c, 0x00, 0x03, 0xfe, 0x00, 0x30, 0x00, 0x7f, 0xc0, 0x01, 0x80, 
  0x01, 0xc0, 0x03, 0xfe, 0x00, 0x0e, 0x00, 0x03, 0xfe, 0x00, 0x78, 0x00, 0x7f, 0xc0, 0x03, 0x80, 
  0x03, 0xc0, 0x03, 0xfe, 0x00, 0x1e, 0x00, 0x03, 0xfe, 0x00, 0x78, 0x00, 0x7f, 0xe0, 0x03, 0xc0, 
  0x07, 0xe0, 0x07, 0x8e, 0x00, 0x3f, 0x00, 0x07, 0x8e, 0x00, 0xfc, 0x00, 0x70, 0xe0, 0x07, 0xe0, 
  0xff, 0xff, 0x06, 0x03, 0x07, 0xff, 0xf8, 0x06, 0x03, 0x1f, 0xff, 0xe0, 0xc0, 0x60, 0xff, 0xff
};
//Nightmare is over now


//Now we do servo stuff
Servo myservo;
// Recommended PWM GPIO pins on the ESP32 include 2,4,12-19,21-23,25-27,32-33 
//attach your servos to pin 18 and 19 on node MCU they will be marked as D18 and D19
int servoPin = 18;
int servoPin2 = 19;

//some variables  for stuff we will do later
int pos = 0;
int16_t ax, ay, az ;
Adafruit_MPU6050 mpu;


// Preparing to do more stuff
//Bascically we are setting up everything here.
void setup(void) {
  Serial.begin(115200);
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C); //or 0x3C
  display.clearDisplay(); //for Clearing the display
  display.drawBitmap(0, 0, myBitmap, 128, 64, WHITE); // display.drawBitmap(x position, y position, bitmap data, bitmap width, bitmap height, color)
  display.display();

  
  while (!Serial) {
    delay(10); // will pause Zero, Leonardo, etc until serial console opens
  }
  //Dont worry about this. This will execute if you fail but i have faith in you we are not going to fail today.
  // Ok in case we do if you see this message in output it means wire is loose or you have connected MPU6050 wrong. But i have faith in you
  // Try to initialize!
  if (!mpu.begin()) {
    Serial.println("Failed to find MPU6050 chip");
    while (1) {
      delay(10);
    }
  }
//Dont be scared this is normal stuff just MPU6050 doing its thing move on now.
  mpu.setAccelerometerRange(MPU6050_RANGE_16_G);
  mpu.setGyroRange(MPU6050_RANGE_250_DEG);
  mpu.setFilterBandwidth(MPU6050_BAND_21_HZ);
 // Serial.println("");
  delay(100);
  // Allow allocation of all timers
  ESP32PWM::allocateTimer(0);
  ESP32PWM::allocateTimer(1);
  ESP32PWM::allocateTimer(2);
  ESP32PWM::allocateTimer(3);
  
  //Setting up servo here
  myservo.setPeriodHertz(50);    // standard 50 hz servo
  myservo.attach(servoPin, 1000, 2000);
  myservo.attach(servoPin2, 1000, 2000);// attaches the servo on pin 18 to the servo object
  // using default min/max of 1000us and 2000us
  // different servos may require different min/max settings
  // for an accurate 0 to 180 sweep
}


//Stuff starts here
void loop() {

  /* Get new sensor events with the readings */
  sensors_event_t a, g, temp;
  mpu.getEvent(&a, &g, &temp);

  /* Print out the values */
 // Serial.print(a.acceleration.x);
 // Serial.print("\t");
 // Serial.print(a.acceleration.y);
 // Serial.print("\t");
 // Serial.print(a.acceleration.z);
 // Serial.print("\t");
 //If you open serial output you will ee these values printeed it means evrything is working.
  Serial.print(g.gyro.x);
  Serial.print("\t");
  Serial.print(g.gyro.y);
  Serial.print("\t");
  Serial.print(g.gyro.z);
  //Serial.println("");
  // AHHHH... magic happens here. This is hte soul of our rocket. This is mapping function. It takes output from mpu6050
  // and maps to servo motor. This is what makes your fins move. Godbless whoever built this function.
  ax = map (a.acceleration.y, -10, 10, 0, 180) ;
  ay = map (a.acceleration.y, -10, 10, 0, 180) ;
 
  myservo.write(ax);    // tell servo to go to position in variable 'pos'
  //delay(15); 
  delay(10);
}
// See we are done here now go call some friends show off your project
